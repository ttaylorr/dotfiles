#!/usr/bin/env bash

main() {
  local name="$(sanitize_name "$1")"
  if [ -z "$name" ]; then
    echo >&2 "usage: $0 <filename>"
    exit 1
  fi

  local any_found="0"
  local blob_sha="$(blob_sha_at_head "$name")"

  while read sha; do
    if diff_tree_match "$sha" "$blob_sha"; then
      echo "$name@$blob_sha introduced via $sha"
      exit 0
    fi

    if tree_match "$sha" "$blob_sha"; then
      echo "$name@$blob_sha found in $sha"
      any_found="1"
    fi
  done < <(git log --format="%H")

  if [ "1" -ne "$any_found" ]; then
    exit 1
  fi
  exit 0
}

sanitize_name() {
  local name="$1"

  echo "$name" \
    | sed -e 's/^\.\///g' \
    | sed -e 's/^\///g'
}

blob_sha_at_head() {
  local name="$1"

  git ls-files -s \
    | grep "\t$name$" \
    | awk '{ print $2 }'
}

tree_match() {
  local treeish="$1"
  local blob="$2"

  local tree="$(git ls-tree "$treeish" -r)"

  echo "$tree" | grep -q "$blob"
}

diff_tree_match() {
  local treeish="$1"
  local blob="$2"

  local diff_tree="$(git diff-tree -r --no-commit-id "$treeish")"

  echo "$diff_tree" | awk '{ print $4 }' | grep -q "$blob"
}

GIT_ROOT="$(git rev-parse --show-toplevel 2>/dev/null)"

if [ "$?" -ne "0" ]; then
  echo "fatal: not in a Git repository" >&2
  exit 1
fi

main "$@";
